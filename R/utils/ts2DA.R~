ts2DA <- function(simseqT, MCres, field='rnof.m3s', glike=NULL, stat='E', mo=NULL) {
 # map timeseries to a format directly readable by the lisflood DA software as inflow boundary conditions
 # based on glike select the m best simulations for each boundary conditions

 # note: the glike-based selection mechanism is not to be used as real forecast mode,
 #       where we don't know which are the best simulations, but all (m=NULL) are selected
 #       it is just intended to be used for testing an uncalibrated model in one event as linked with the lisflood DA software

  mi <- length(MCres)                              # input size ensemble
  n  <- length(glike)
  olst <- vector('list', n)                        # output list with irregularly sampled time series (irts)

  if (!is.null(glike))
    names(olst) <- names(glike)

  for (i in 1:n) {
    olst[[i]]$irts <- irts(simseqT, matrix(NA,nrow=length(simseqT),ncol=mi))
    for (im in 1:mi) {
      olst[[i]]$irts[[2]][,im] <- MCres[[im]][[field]][,i]
    }
  }

  if (is.null(mo))
    mo <- mi
  if (!is.null(glike)) {  # select the best m simulations in the ensemble
    if (mo > mi)
      stop('ts2DA:: mo <= mi is not fulfilled!')
    for (i in 1:n) {
      stats <- glike[[i]][stat,]
      imd <- order(stats, decreasing=TRUE)[1:mo] # warning: this assumes the higher the statistics 'stat' the better the simulation
      olst[[i]]$irts[[2]] <- olst[[i]]$irts[[2]][,imd]
      olst[[i]]$imrf <- imd
      olst[[i]][[stat]] <- glike[[i]][stat,imd]
    }
  }
  return(olst)
}
